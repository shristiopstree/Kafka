name: Generate_secret_Pass_kafkauser_stage

on:
  workflow_dispatch:
    inputs:
      num_users:
        description: 'Number of Kafka users to create'
        required: true
      user_names:
        description: 'Comma-separated list of Kafka user names'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Stage-kafka
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure kubectl
        uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Set up Kafka Users and ACLs
        id: set_up_users_and_acls
        run: |
          echo "apiVersion: kafka.strimzi.io/v1beta2" > kafka_users.yaml
          echo "kind: KafkaUserList" >> kafka_users.yaml
          echo "items:" >> kafka_users.yaml
          IFS=',' read -ra USER_NAMES <<< "${{ github.event.inputs.user_names }}"
          for name in "${USER_NAMES[@]}"; do
              echo "- apiVersion: kafka.strimzi.io/v1beta2" >> kafka_users.yaml
              echo "  kind: KafkaUser" >> kafka_users.yaml
              echo "  metadata:" >> kafka_users.yaml
              echo "    name: $name" >> kafka_users.yaml
              echo "    labels:" >> kafka_users.yaml
              echo "      strimzi.io/cluster: coto-kafka-qa-cluster">> kafka_users.yaml
              echo "  spec:" >> kafka_users.yaml
              echo "    authentication:" >> kafka_users.yaml
              echo "      type: scram-sha-512" >> kafka_users.yaml
          done
          echo "Kafka users YAML file generated successfully!"
          echo "::set-output name=kafka_users_yaml::kafka_users.yaml"

      - name: Apply Kafka Users YAML
        run: |
          kubectl apply -f ${{ steps.set_up_users_and_acls.outputs.kafka_users_yaml }} -n kafka

      - name: Install Linode CLI (linode-cli)
        run: |
          if ! command -v linode-cli &> /dev/null; then
            echo "Linode CLI is not installed. Installing..."
            pip3 install linode-cli
            pip3 install boto3
          else
            echo "Linode CLI is already installed."
          fi

      - name: Get secrets
        run: |
          IFS=',' read -ra USER_NAMES <<< "${{ github.event.inputs.user_names }}"
          for user_name in "${USER_NAMES[@]}"; do
          kubectl get secret "$user_name" -n kafka -o jsonpath='{.data.sasl\.jaas\.config}' | base64 -d > "${user_name}_sasl_config.txt"
          done

      - name: Upload secrets to Linode Object Storage
        env:
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
          LINODE_CLI_OBJ_ACCESS_KEY: ${{ secrets.LINODE_ACCESS_KEY }}
          LINODE_CLI_OBJ_SECRET_KEY: ${{ secrets.LINODE_SECRET_KEY }}
        run: |
          IFS=',' read -ra USER_NAMES <<< "${{ github.event.inputs.user_names }}"
          for user_name in "${USER_NAMES[@]}"; do
          linode-cli obj put --cluster in-maa-1 ${user_name}_sasl_config.txt "coto-wrld/stage-kafka-details"
          done